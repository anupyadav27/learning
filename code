from google.cloud import resource_manager
from neo4j import GraphDatabase

# Function to fetch enabled GCP resources
def fetch_gcp_resources():
    client = resource_manager.Client()
    enabled_resources = []
    for project in client.list_projects():
        if project.status == "ACTIVE":
            enabled_resources.append(project.project_id)
    return enabled_resources

# Neo4j connection setup
uri = "neo4j+s://7d76c4ea.databases.neo4j.io"
username = "neo4j"
password = "JZXfDTU7pl8wOPfrnaUujXnX8zvanhYn_bn5j53NeXg"

# Function to upload resources to Neo4j
def upload_to_neo4j(enabled_resources):
    driver = GraphDatabase.driver(uri, auth=(username, password))
    with driver.session() as session:
        for resource in enabled_resources:
            session.run("MERGE (r:Resource {name: $name})", name=resource)

# Main function to trigger the process
def main():
    try:
        # Fetch enabled GCP resources
        enabled_resources = fetch_gcp_resources()

        # Upload resources to Neo4j
        upload_to_neo4j(enabled_resources)

        print("Data uploaded to Neo4j successfully")

    except Exception as e:
        print(f"Error occurred: {str(e)}")
